---
import { getCollection } from "astro:content";
import arrayDateComparator from "src/utils/array-date-comparator";
import Layout from "src/layouts/Layout.astro";
import BriefPerEntry from "src/components/BriefPerEntry.astro";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";

export const getStaticPaths = (async () => {
  const allArticles = await getCollection("articles");
  const allReactions = await getCollection("reactions");
  const allHotLinks = await getCollection("hotlinks");
  const entries = [...allArticles, ...allReactions, ...allHotLinks];
  const tags: Array<string> = entries.flatMap((item) => item.data.tags ?? []);

  return tags.map((tag) => ({
    params: {
      tag,
    },
    props: {
      entries: entries
        .filter((item) => item.data.tags?.includes(tag))
        .sort(arrayDateComparator((item) => item.data.publishedAt)),
    },
  }));
}) satisfies GetStaticPaths;

interface Props extends InferGetStaticPropsType<typeof getStaticPaths> {}

const { entries } = Astro.props;
const { tag } = Astro.params;
---

<Layout title={tag}>
  <h1 class="text-2xl">Entries for: #{tag}</h1>
  <section class="flex flex-col gap-6 mt-6 lg:gap-12">
    {entries.map((entry) => <BriefPerEntry entry={entry} />)}
  </section>
</Layout>
