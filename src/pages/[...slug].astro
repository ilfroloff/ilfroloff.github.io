---
import { getCollection } from "astro:content";
import arrayDateComparator from "src/utils/array-date-comparator";
import type { GetStaticPaths, InferGetStaticPropsType } from "astro";
import ArticleLayout from "src/layouts/ArticleLayout.astro";

export const getStaticPaths = (async () => {
  const allArticles = await getCollection("articles");
  const allHotLinks = await getCollection("hotlinks");
  const sorted = [...allArticles, ...allHotLinks].sort(
    arrayDateComparator((item) => item.data.publishedAt),
  );

  return sorted.map((entry) => ({
    params: {
      slug: entry.slug,
    },
    props: {
      entry,
    },
  }));
}) satisfies GetStaticPaths;

type Props = InferGetStaticPropsType<typeof getStaticPaths>;

const { entry } = Astro.props as Props;
const { Content, remarkPluginFrontmatter } = await entry.render();
---

<ArticleLayout frontmatter={remarkPluginFrontmatter}>
  <Content />
</ArticleLayout>
